--Bozo V1 by Quirckily and Koi
local KnockbackTable = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Bozo V1", "GrapeTheme")

-- MAIN
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Visuals")

MainSection:NewButton("Chams", "I see all...see players trough walls", function()
    local players = game.Players:GetPlayers()

    for i,v in pairs(players) do
     local esp = Instance.new("Highlight")
     esp.Name = v.Name
     esp.FillTransparency = 0
     esp.FillColor = Color3.new(1, 0.666667, 0)
     esp.OutlineColor = Color3.new(1, 0.333333, 1)
     esp.OutlineTransparency = 0
     esp.Parent = v.Character
    end
    game.Players.PlayerAdded:Connect(function(plr)
        plr.CharacterAdded:Connect(function(chr)
            local esp = Instance.new("Highlight")
            esp.Name = plr.Name
            esp.FillTransparency = 0
            esp.FillColor = Color3.new(1, 0.666667, 0)
            esp.OutlineColor = Color3.new(1, 0.333333, 1)
            esp.OutlineTransparency = 0
            esp.Parent = chr
        end)
     end)
end)

MainSection:NewToggle("Esp Box(Xzyn)","Opens Box esp",function()
    local Player = game:GetService("Players").LocalPlayer
    local Camera = game:GetService("Workspace").CurrentCamera
    local Mouse = Player:GetMouse()
    
    local function Dist(pointA, pointB)
        return math.sqrt(math.pow(pointA.X - pointB.X, 2) + math.pow(pointA.Y - pointB.Y, 2))
    end
    
    local function GetClosest(points, dest)
        local min  = math.huge 
        local closest = nil
        for _,v in pairs(points) do
            local dist = Dist(v, dest)
            if dist < min then
                min = dist
                closest = v
            end
        end
        return closest
    end
    
    local function DrawESP(plr)
        local Box = Drawing.new("Quad")
        Box.Visible = false
        Box.PointA = Vector2.new(0, 0)
        Box.PointB = Vector2.new(0, 0)
        Box.PointC = Vector2.new(0, 0)
        Box.PointD = Vector2.new(0, 0)
        Box.Color = Color3.fromRGB(255, 255, 255)
        Box.Thickness = 2
        Box.Transparency = 1
    
        local function Update()
            local c
            c = game:GetService("RunService").RenderStepped:Connect(function()
                if plr.Character ~= nil and plr.Character:FindFirstChildOfClass("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                    if vis then 
                        local points = {}
                        local c = 0
                        for _,v in pairs(plr.Character:GetChildren()) do
                            if v:IsA("BasePart") then
                                c = c + 1
                                local p = Camera:WorldToViewportPoint(v.Position)
                                if v.Name == "HumanoidRootPart" then
                                    p = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(0, 0, -v.Size.Z)).p)
                                elseif v.Name == "Head" then
                                    p = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(0, v.Size.Y/2, v.Size.Z/1.25)).p)
                                elseif string.match(v.Name, "Left") then
                                    p = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(-v.Size.X/2, 0, 0)).p)
                                elseif string.match(v.Name, "Right") then
                                    p = Camera:WorldToViewportPoint((v.CFrame * CFrame.new(v.Size.X/2, 0, 0)).p)
                                end
                                points[c] = p
                            end
                        end
                        local Left = GetClosest(points, Vector2.new(0, pos.Y))
                        local Right = GetClosest(points, Vector2.new(Camera.ViewportSize.X, pos.Y))
                        local Top = GetClosest(points, Vector2.new(pos.X, 0))
                        local Bottom = GetClosest(points, Vector2.new(pos.X, Camera.ViewportSize.Y))
    
                        if Left ~= nil and Right ~= nil and Top ~= nil and Bottom ~= nil then
                            Box.PointA = Vector2.new(Right.X, Top.Y)
                            Box.PointB = Vector2.new(Left.X, Top.Y)
                            Box.PointC = Vector2.new(Left.X, Bottom.Y)
                            Box.PointD = Vector2.new(Right.X, Bottom.Y)
    
                            Box.Visible = true
                        else 
                            Box.Visible = false
                        end
                    else 
                        Box.Visible = false
                    end
                else
                    Box.Visible = false
                    if game.Players:FindFirstChild(plr.Name) == nil then
                        c:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(Update)()
    end
    
    for _,v in pairs(game:GetService("Players"):GetChildren()) do
        if v.Name ~= Player.Name then 
            DrawESP(v)
        end
    end
    
    game:GetService("Players").PlayerAdded:Connect(function(v)
        DrawESP(v)
    end)
    end)

local MainSection = Main:NewSection("Movement")

MainSection:NewKeybind("Speed", "speeds up", Enum.KeyCode.K, function()
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23
end)

MainSection:NewKeybind("Fly", "R", Enum.KeyCode.R, function()
	game.Workspace.Gravity = 0
    wait(2.5)
    game.Workspace.Gravity = 196
end)

MainSection:NewToggle("Velocity","Reduces knockback taken",function(state)
    if state then
            KnockbackTable["kbDirectionStrength"] = 0
            KnockbackTable["kbUpwardStrength"] = 0
        else
            KnockbackTable["kbDirectionStrength"] = 100
            KnockbackTable["kbUpwardStrength"] = 100
        end
    end)

local MainSection = Main:NewSection("Mechanics")

MainSection:NewToggle("No Fall", "Prevents taking fall ", function(callback)
    local nofall = true
    if callback then
        if nofall then
            spawn(function()
                repeat
                    wait()
                    if nofall == false then
                        return end

                        game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged.GroundHit:FireServer()
                    until nofall == false
                end)
            end
    else
        local nofall = false
    end
end)

local credits = Window:NewTab("credits")
local creditsSection = credits:NewSection("Credits")
local creditsSection = credits:NewSection("Made By")
local creditsSection = credits:NewSection("Quirckily")
local creditsSection = credits:NewSection("Koi")
local creditsSection = credits:NewSection("And Springs")
local creditsSection = credits:NewSection("aka noboline dev :troll:")
